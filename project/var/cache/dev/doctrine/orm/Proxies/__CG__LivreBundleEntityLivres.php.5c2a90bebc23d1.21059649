<?php

namespace Proxies\__CG__\LivreBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Livres extends \LivreBundle\Entity\Livres implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'LivreBundle\\Entity\\Livres' . "\0" . 'id', '' . "\0" . 'LivreBundle\\Entity\\Livres' . "\0" . 'nom', '' . "\0" . 'LivreBundle\\Entity\\Livres' . "\0" . 'auteur', '' . "\0" . 'LivreBundle\\Entity\\Livres' . "\0" . 'codeqr', '' . "\0" . 'LivreBundle\\Entity\\Livres' . "\0" . 'categorie', '' . "\0" . 'LivreBundle\\Entity\\Livres' . "\0" . 'mPub', '' . "\0" . 'LivreBundle\\Entity\\Livres' . "\0" . 'img', '' . "\0" . 'LivreBundle\\Entity\\Livres' . "\0" . 'description', '' . "\0" . 'LivreBundle\\Entity\\Livres' . "\0" . 'prix', '' . "\0" . 'LivreBundle\\Entity\\Livres' . "\0" . 'stock', '' . "\0" . 'LivreBundle\\Entity\\Livres' . "\0" . 'pdfpath', '' . "\0" . 'LivreBundle\\Entity\\Livres' . "\0" . 'mp3path', '' . "\0" . 'LivreBundle\\Entity\\Livres' . "\0" . 'rate', '' . "\0" . 'LivreBundle\\Entity\\Livres' . "\0" . 'promo'];
        }

        return ['__isInitialized__', '' . "\0" . 'LivreBundle\\Entity\\Livres' . "\0" . 'id', '' . "\0" . 'LivreBundle\\Entity\\Livres' . "\0" . 'nom', '' . "\0" . 'LivreBundle\\Entity\\Livres' . "\0" . 'auteur', '' . "\0" . 'LivreBundle\\Entity\\Livres' . "\0" . 'codeqr', '' . "\0" . 'LivreBundle\\Entity\\Livres' . "\0" . 'categorie', '' . "\0" . 'LivreBundle\\Entity\\Livres' . "\0" . 'mPub', '' . "\0" . 'LivreBundle\\Entity\\Livres' . "\0" . 'img', '' . "\0" . 'LivreBundle\\Entity\\Livres' . "\0" . 'description', '' . "\0" . 'LivreBundle\\Entity\\Livres' . "\0" . 'prix', '' . "\0" . 'LivreBundle\\Entity\\Livres' . "\0" . 'stock', '' . "\0" . 'LivreBundle\\Entity\\Livres' . "\0" . 'pdfpath', '' . "\0" . 'LivreBundle\\Entity\\Livres' . "\0" . 'mp3path', '' . "\0" . 'LivreBundle\\Entity\\Livres' . "\0" . 'rate', '' . "\0" . 'LivreBundle\\Entity\\Livres' . "\0" . 'promo'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Livres $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getPromo()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPromo', []);

        return parent::getPromo();
    }

    /**
     * {@inheritDoc}
     */
    public function setPromo($promo)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPromo', [$promo]);

        return parent::setPromo($promo);
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setId($id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', [$id]);

        return parent::setId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function getNom()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNom', []);

        return parent::getNom();
    }

    /**
     * {@inheritDoc}
     */
    public function setNom($nom)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNom', [$nom]);

        return parent::setNom($nom);
    }

    /**
     * {@inheritDoc}
     */
    public function getAuteur()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAuteur', []);

        return parent::getAuteur();
    }

    /**
     * {@inheritDoc}
     */
    public function setAuteur($auteur)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAuteur', [$auteur]);

        return parent::setAuteur($auteur);
    }

    /**
     * {@inheritDoc}
     */
    public function getCodeqr()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCodeqr', []);

        return parent::getCodeqr();
    }

    /**
     * {@inheritDoc}
     */
    public function setCodeqr($codeqr)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCodeqr', [$codeqr]);

        return parent::setCodeqr($codeqr);
    }

    /**
     * {@inheritDoc}
     */
    public function getCategorie()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCategorie', []);

        return parent::getCategorie();
    }

    /**
     * {@inheritDoc}
     */
    public function setCategorie($categorie)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCategorie', [$categorie]);

        return parent::setCategorie($categorie);
    }

    /**
     * {@inheritDoc}
     */
    public function getMPub()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMPub', []);

        return parent::getMPub();
    }

    /**
     * {@inheritDoc}
     */
    public function setMPub($mPub)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMPub', [$mPub]);

        return parent::setMPub($mPub);
    }

    /**
     * {@inheritDoc}
     */
    public function getRate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRate', []);

        return parent::getRate();
    }

    /**
     * {@inheritDoc}
     */
    public function setRate($rate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRate', [$rate]);

        return parent::setRate($rate);
    }

    /**
     * {@inheritDoc}
     */
    public function getImg()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getImg', []);

        return parent::getImg();
    }

    /**
     * {@inheritDoc}
     */
    public function setImg($img)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setImg', [$img]);

        return parent::setImg($img);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', []);

        return parent::getDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription($description)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription', [$description]);

        return parent::setDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function getPrix()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPrix', []);

        return parent::getPrix();
    }

    /**
     * {@inheritDoc}
     */
    public function setPrix($prix)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPrix', [$prix]);

        return parent::setPrix($prix);
    }

    /**
     * {@inheritDoc}
     */
    public function getStock()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStock', []);

        return parent::getStock();
    }

    /**
     * {@inheritDoc}
     */
    public function setStock($stock)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStock', [$stock]);

        return parent::setStock($stock);
    }

    /**
     * {@inheritDoc}
     */
    public function getPdfpath()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPdfpath', []);

        return parent::getPdfpath();
    }

    /**
     * {@inheritDoc}
     */
    public function setPdfpath($pdfpath)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPdfpath', [$pdfpath]);

        return parent::setPdfpath($pdfpath);
    }

    /**
     * {@inheritDoc}
     */
    public function getMp3path()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMp3path', []);

        return parent::getMp3path();
    }

    /**
     * {@inheritDoc}
     */
    public function setMp3path($mp3path)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMp3path', [$mp3path]);

        return parent::setMp3path($mp3path);
    }

    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', []);

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function showallLivres()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'showallLivres', []);

        return parent::showallLivres();
    }

}
